{"version":3,"sources":["webpack:///./node_modules/@w11k/ngx-componentdestroyed/dist/es2015/index.js","webpack:///./src/app/layout/loggerInterseptor/components/logger-details/logger-details.component.html","webpack:///./src/app/layout/loggerInterseptor/components/logger-details/logger-details.component.less","webpack:///./src/app/layout/loggerInterseptor/components/logger-details/logger-details.component.ts","webpack:///./src/app/layout/loggerInterseptor/container/logger.component.html","webpack:///./src/app/layout/loggerInterseptor/container/logger.component.less","webpack:///./src/app/layout/loggerInterseptor/container/logger.component.ts","webpack:///./src/app/layout/loggerInterseptor/loggerInterseptor.module.ts","webpack:///./src/app/layout/loggerInterseptor/map-routing.module.ts","webpack:///./src/app/layout/loggerInterseptor/service/logger.service.ts","webpack:///./src/app/layout/loggerInterseptor/store/actions/index.ts","webpack:///./src/app/layout/loggerInterseptor/store/actions/logger.action.ts","webpack:///./src/app/layout/loggerInterseptor/store/index.ts","webpack:///./src/app/layout/loggerInterseptor/store/state/index.ts","webpack:///./src/app/layout/loggerInterseptor/store/state/logger.state.ts"],"names":[],"mappings":"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","file":"loggerInterseptor-loggerInterseptor-module.js","sourcesContent":["import { ReplaySubject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nexport function componentDestroyed(component) {\n    var modifiedComponent = component;\n    if (modifiedComponent.__componentDestroyed$) {\n        return modifiedComponent.__componentDestroyed$;\n    }\n    var oldNgOnDestroy = component.ngOnDestroy;\n    var stop$ = new ReplaySubject();\n    modifiedComponent.ngOnDestroy = function () {\n        oldNgOnDestroy && oldNgOnDestroy.apply(component);\n        stop$.next(true);\n        stop$.complete();\n    };\n    return modifiedComponent.__componentDestroyed$ = stop$.asObservable();\n}\nexport function untilComponentDestroyed(component) {\n    return function (source) { return source.pipe(takeUntil(componentDestroyed(component))); };\n}\n","module.exports = \"<div *ngIf=\\\"loggerDetail.length\\\" class=\\\"logger-details-container\\\">\\n\\n  <mat-form-field>\\n    <input (keyup)=\\\"applyFilter($event.target.value)\\\" matInput placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n\\n  <table [dataSource]=\\\"(dataSource)\\\" class=\\\"mat-elevation-z8\\\" mat-table>\\n\\n\\n    <ng-container class=\\\"logger-cell\\\"  matColumnDef=\\\"created_date\\\">\\n      <th *matHeaderCellDef mat-header-cell mat-sort-header> Date</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.created_date  | date :'short'}} </td>\\n    </ng-container>\\n\\n    <ng-container  class=\\\"logger-cell\\\" matColumnDef=\\\"ip\\\">\\n      <th *matHeaderCellDef mat-header-cell> IP</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.ip}} </td>\\n    </ng-container>\\n\\n    <ng-container class=\\\"logger-cell\\\" matColumnDef=\\\"city\\\">\\n      <th *matHeaderCellDef mat-header-cell> City</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.fkLocation?.city }} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"region_code\\\">\\n      <th *matHeaderCellDef mat-header-cell> Region</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.fkLocation?.region_code}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"latitude\\\">\\n      <th *matHeaderCellDef mat-header-cell> latitude</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.fkLocation?.latitude}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"longitude\\\" stickyEnd>\\n      <th *matHeaderCellDef mat-header-cell> Longitude</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.fkLocation?.longitude}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"message\\\" stickyEnd>\\n      <th *matHeaderCellDef mat-header-cell> Interceptor</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.message}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"userAgent\\\" stickyEnd>\\n      <th *matHeaderCellDef mat-header-cell> User-Agent</th>\\n      <td *matCellDef=\\\"let element\\\" mat-cell> {{element.userAgent}} </td>\\n    </ng-container>\\n\\n    <tr *matHeaderRowDef=\\\"displayedColumns sticky: true\\\" mat-header-row></tr>\\n    <tr (click)=\\\"onRowSelected(row)\\\" *matRowDef=\\\"let row; columns: displayedColumns;\\\" mat-row></tr>\\n\\n  </table>\\n</div>\\n\"","module.exports = \":host .logger-details-container table {\\n  width: 100%;\\n}\\n:host .logger-details-container .mat-form-field {\\n  margin-left: 20px;\\n  font-size: 14px;\\n  max-width: 400px;\\n}\\n:host .logger-details-container tr.mat-row {\\n  cursor: pointer;\\n}\\n:host .logger-details-container .mat-column-latitude,\\n:host .logger-details-container .mat-column-longitude,\\n:host .logger-details-container .mat-column-ip,\\n:host .logger-details-container mat-column-created_date {\\n  min-width: 100px;\\n}\\n:host .logger-details-container .mat-column-city,\\n:host .logger-details-container .mat-column-region {\\n  min-width: 70px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hc2FmbGV2eS9wcm9qZWN0L3dpbnRlZ29fcHJvamVjdC93aW50ZWdvLW1hcC1mcm9udC9zcmMvYXBwL2xheW91dC9sb2dnZXJJbnRlcnNlcHRvci9jb21wb25lbnRzL2xvZ2dlci1kZXRhaWxzL2xvZ2dlci1kZXRhaWxzLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9sYXlvdXQvbG9nZ2VySW50ZXJzZXB0b3IvY29tcG9uZW50cy9sb2dnZXItZGV0YWlscy9sb2dnZXItZGV0YWlscy5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUlNLFdBQUE7QUNGTjtBREZBO0VBUU0saUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUNITjtBRFBBO0VBY00sZUFBQTtBQ0pOO0FEVkE7Ozs7RUFrQk0sZ0JBQUE7QUNGTjtBRGhCQTs7RUFzQk0sZUFBQTtBQ0ZOIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L2xvZ2dlckludGVyc2VwdG9yL2NvbXBvbmVudHMvbG9nZ2VyLWRldGFpbHMvbG9nZ2VyLWRldGFpbHMuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIC5sb2dnZXItZGV0YWlscy1jb250YWluZXIge1xuXG4gICAgdGFibGUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICB9XG5cbiAgICB0ci5tYXQtcm93IHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG5cbiAgICAubWF0LWNvbHVtbi1sYXRpdHVkZSwubWF0LWNvbHVtbi1sb25naXR1ZGUsIC5tYXQtY29sdW1uLWlwLG1hdC1jb2x1bW4tY3JlYXRlZF9kYXRlIHtcbiAgICAgIG1pbi13aWR0aDogMTAwcHg7XG4gICAgfVxuXG4gICAgLm1hdC1jb2x1bW4tY2l0eSwubWF0LWNvbHVtbi1yZWdpb257XG4gICAgICBtaW4td2lkdGg6IDcwcHg7XG4gICAgfVxuICB9XG59XG5cbiIsIjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgdGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgLm1hdC1mb3JtLWZpZWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbn1cbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgdHIubWF0LXJvdyB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgLm1hdC1jb2x1bW4tbGF0aXR1ZGUsXG46aG9zdCAubG9nZ2VyLWRldGFpbHMtY29udGFpbmVyIC5tYXQtY29sdW1uLWxvbmdpdHVkZSxcbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgLm1hdC1jb2x1bW4taXAsXG46aG9zdCAubG9nZ2VyLWRldGFpbHMtY29udGFpbmVyIG1hdC1jb2x1bW4tY3JlYXRlZF9kYXRlIHtcbiAgbWluLXdpZHRoOiAxMDBweDtcbn1cbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgLm1hdC1jb2x1bW4tY2l0eSxcbjpob3N0IC5sb2dnZXItZGV0YWlscy1jb250YWluZXIgLm1hdC1jb2x1bW4tcmVnaW9uIHtcbiAgbWluLXdpZHRoOiA3MHB4O1xufVxuIl19 */\"","import {AfterContentInit, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {LoggerModel} from '../../../../model/logger.model';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-logger-details',\n  templateUrl: './logger-details.component.html',\n  styleUrls: ['./logger-details.component.less']\n})\nexport class LoggerDetailsComponent implements OnInit, AfterContentInit {\n\n  @Input() loggerDetail: LoggerModel[];\n  @Output() onMarkerSelected = new EventEmitter();\n  displayedColumns: string[] = ['created_date', 'ip', 'city', 'region_code', 'longitude', 'latitude', 'message', 'userAgent'];\n  dataSource: MatTableDataSource<LoggerModel> = null;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit(): void {\n    this.dataSource = new MatTableDataSource(this.loggerDetail);\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onRowSelected(row: LoggerModel) {\n    this.onMarkerSelected.emit(row);\n\n  }\n\n\n}\n","module.exports = \"<div class=\\\"logger-container\\\">\\n  <app-progress-bar [isLoading]=\\\"(isLoading$ | async)\\\"></app-progress-bar>\\n  <div class=\\\"app-logger-details-container\\\">\\n    <app-logger-details (onMarkerSelected)=\\\"markerSelected($event)\\\" *ngIf=\\\"(loggerData$ | async).length\\\"\\n                        [loggerDetail]=\\\"(loggerData$ | async) \\\">\\n\\n    </app-logger-details>\\n  </div>\\n  <div class=\\\"agm-map-container\\\">\\n    <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\">\\n      <agm-marker *ngFor=\\\"let marker of (loggerData$ | async)\\\" [latitude]=\\\"marker?.fkLocation.latitude\\\"\\n                  [longitude]=\\\"marker?.fkLocation.longitude\\\">\\n      </agm-marker>\\n    </agm-map>\\n  </div>\\n\\n</div>\\n\"","module.exports = \":host .logger-container {\\n  width: 100%;\\n  height: 100%;\\n}\\n:host .logger-container .agm-map-container {\\n  height: 100%;\\n}\\n:host .logger-container .agm-map-container agm-map {\\n  height: 100%;\\n}\\n:host .app-logger-details-container {\\n  background: #ffffff;\\n  min-height: 100px;\\n  max-height: 40vh;\\n  overflow: auto;\\n  margin-bottom: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hc2FmbGV2eS9wcm9qZWN0L3dpbnRlZ29fcHJvamVjdC93aW50ZWdvLW1hcC1mcm9udC9zcmMvYXBwL2xheW91dC9sb2dnZXJJbnRlcnNlcHRvci9jb250YWluZXIvbG9nZ2VyLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9sYXlvdXQvbG9nZ2VySW50ZXJzZXB0b3IvY29udGFpbmVyL2xvZ2dlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUVJLFdBQUE7RUFDQSxZQUFBO0FDRko7QUREQTtFQU1NLFlBQUE7QUNGTjtBREpBO0VBUVEsWUFBQTtBQ0RSO0FEUEE7RUFjSSxtQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUNKSiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9sb2dnZXJJbnRlcnNlcHRvci9jb250YWluZXIvbG9nZ2VyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbjpob3N0IHtcbiAgLmxvZ2dlci1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcblxuICAgIC5hZ20tbWFwLWNvbnRhaW5lcntcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGFnbS1tYXAge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cbiAgLmFwcC1sb2dnZXItZGV0YWlscy1jb250YWluZXJ7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgICBtYXgtaGVpZ2h0OiA0MHZoO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cblxufVxuIiwiOmhvc3QgLmxvZ2dlci1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuOmhvc3QgLmxvZ2dlci1jb250YWluZXIgLmFnbS1tYXAtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuOmhvc3QgLmxvZ2dlci1jb250YWluZXIgLmFnbS1tYXAtY29udGFpbmVyIGFnbS1tYXAge1xuICBoZWlnaHQ6IDEwMCU7XG59XG46aG9zdCAuYXBwLWxvZ2dlci1kZXRhaWxzLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICBtYXgtaGVpZ2h0OiA0MHZoO1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cbiJdfQ== */\"","import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport * as fromState from './../store';\nimport {Observable} from 'rxjs';\nimport {LoggerModel} from '../../../model/logger.model';\nimport {Select, Store} from '@ngxs/store';\nimport {AgmMap} from '@agm/core';\nimport {untilComponentDestroyed} from '@w11k/ngx-componentdestroyed';\n\ndeclare var google;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './logger.component.html',\n  styleUrls: ['./logger.component.less']\n})\nexport class LoggerComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @Select(fromState.LoggerState.getLoggerDetailData) loggerData$: Observable<LoggerModel[]>;\n  @Select(fromState.LoggerState.isLoading$) isLoading$: Observable<boolean>;\n\n  @ViewChild(AgmMap) agmMap;\n  map: any = null;\n  zoom = 10;\n  lat = 32.816;\n  lng = 34.9821;\n\n  constructor(private store: Store) {\n    this.store.dispatch(new fromState.LoggerListDetail());\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.agmMap.mapReady.pipe(untilComponentDestroyed(this)).subscribe(map => {\n      this.map = map;\n    });\n  }\n\n  markerSelected(row: LoggerModel) {\n    this.lat = row.fkLocation.latitude;\n    this.lng = row.fkLocation.longitude;\n    const loc = new google.maps.LatLng(row.fkLocation.longitude, row.fkLocation.latitude);\n    this.map.setCenter(loc);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {MapRoutingModule} from './map-routing.module';\nimport {SharedModule} from '../../shared/shared.module';\nimport {LoggerComponent} from './container/logger.component';\nimport {LoggerService} from './service/logger.service';\nimport {NgxsModule} from '@ngxs/store';\nimport {LoggerState} from './store/state/logger.state';\nimport {LoggerDetailsComponent} from './components/logger-details/logger-details.component';\n\n@NgModule({\n  declarations: [LoggerComponent, LoggerDetailsComponent],\n  providers: [LoggerService],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MapRoutingModule,\n    NgxsModule.forFeature([LoggerState]),\n\n  ]\n})\nexport class LoggerInterseptorModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoggerComponent} from './container/logger.component';\n\nconst routes: Routes = [\n  {path: '', component: LoggerComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MapRoutingModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {environment} from 'src/environments/environment';\nimport {LoggerModel} from '../../../model/logger.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  private apiUrl = environment.baseApiUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllLoggerDetails(): Observable<LoggerModel[]> {\n    return this.http.get<LoggerModel[]>(`${this.apiUrl}/logger/getAll`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n\n  private handleError(err) {\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n}\n","export * from './logger.action';\n","import {LoggerModel} from '../../../../model/logger.model';\n\nexport const LOGGER_LIST_DETAILS = '[LOGGER] LOGGER_LIST_DETAILS';\nexport const LOGGER_LIST_DETAILS_SUCCESS = '[LOGGER] LOGGER_LIST_DETAILS_SUCCESS';\nexport const LOGGER_LIST_DETAILS_FAIL = '[LOGGER] LOGGER_LIST_DETAILS_FAIL';\n\n\nexport class LoggerListDetail {\n\n  static readonly type = LOGGER_LIST_DETAILS;\n\n  constructor(public payload: any = null) {\n  }\n}\n\nexport class LoggerListDetailSuccess {\n  static readonly type = LOGGER_LIST_DETAILS_SUCCESS;\n\n  constructor(public payload: LoggerModel[]) {\n  }\n}\n\nexport class LoggerListDetailFail {\n  static readonly type = LOGGER_LIST_DETAILS_FAIL;\n\n  constructor(public payload: any) {\n  }\n}\n\n\n\n\n\n\n\n","export * from './actions/index';\nexport * from './state/index';\n","export * from './logger.state';\n","import {Action, Selector, State, StateContext} from '@ngxs/store';\nimport * as fromAction from '../actions';\nimport {catchError, map} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {LoggerService} from '../../service/logger.service';\nimport {LoggerModel} from '../../../../model/logger.model';\n\nexport class LoggerStateModel {\n  data: LoggerModel[];\n  loaded: boolean;\n  loading: boolean;\n}\n\n@State<LoggerStateModel>({\n  name: 'loggerState',\n  defaults: {\n    data: [],\n    loaded: false,\n    loading: false,\n  }\n})\n\n\nexport class LoggerState {\n  constructor(private loggerService: LoggerService) {\n  }\n\n  @Selector()\n  static getLoggerDetailData(state: LoggerStateModel): Array<LoggerModel> {\n    return state.data;\n  }\n\n  @Selector()\n  static isLoading$(state: LoggerStateModel): boolean {\n    return state.loading;\n  }\n\n\n  @Action(fromAction.LoggerListDetail)\n  LoggerListDetail({dispatch, patchState}: StateContext<LoggerStateModel>) {\n    patchState({loading: true});\n    return this.loggerService.getAllLoggerDetails()\n      .pipe(\n        map((data) => {\n          dispatch(new fromAction.LoggerListDetailSuccess(data));\n        }),\n        catchError(error => of(dispatch(new fromAction.LoggerListDetailFail(error))))\n      );\n  }\n\n  @Action(fromAction.LoggerListDetailSuccess)\n  LoggerListDetailSuccess({patchState}: StateContext<LoggerStateModel>, action: fromAction.LoggerListDetailSuccess) {\n    const data = action.payload as LoggerModel[];\n    patchState(\n      {\n        data,\n        loading: false,\n        loaded: true\n      }\n    );\n  }\n\n  @Action(fromAction.LoggerListDetailFail)\n  LoggerListDetailFail({patchState}: StateContext<LoggerStateModel>) {\n    patchState(\n      {\n        loading: false,\n        loaded: false,\n      }\n    );\n  }\n}\n\n"],"sourceRoot":""}